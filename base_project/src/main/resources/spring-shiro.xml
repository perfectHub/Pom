<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.1.xsd"
	default-lazy-init="true">
	
	<!-- 自定义realm -->
	<bean id="myRealm" class="com.chen.realm.MyRealm">
	</bean>
	
	<!-- 缓存管理器 使用Ehcache实现 -->  
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	    <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>  
	</bean>  
	
	<!-- shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"/>
		<!-- Session管理器 -->
		<property name="sessionManager" ref="shiroSessionManager"/>
		
		<property name="cacheManager" ref="cacheManager"/> 
	</bean>
	
	<!-- session管理器 -->
	<bean id="shiroSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 超时时间 -->
		<property name="globalSessionTimeout" value="10000"/>
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionIdCookieEnabled" value="true"/>  
    	<property name="sessionIdCookie" ref="sessionIdCookie"/>  
		<property name="sessionDAO" ref="sessionDao"/>
	</bean>
	
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="sid"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="180000"/>  
	</bean> 
	
	<!-- shiro的sessionDao -->
	<bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		 <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
	</bean>
	
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"/>
	 
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
		<!-- <property name="loginUrl" value="/login"/> -->
		<property name="filters"> 
		     <map> 
		        <entry key="authc" value-ref="formAuthenticationFilter"/> 
		     </map> 
  		</property>
		<property name="filterChainDefinitions">
			 <value>
				 /=anon  
                 /login=anon 
                 /static/**=anon
                 /getCode=anon 
                 /**=authc  
			</value> 
		</property>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- 开启shiro注解模式 开启代理为cglib代理基于实现类代理，如果基于接口代理那么注解扫面不到 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>